using Microsoft.EntityFrameworkCore.SqlServer.Storage;
using System;

namespace Microsoft.EntityFrameworkCore.SqlServer.Test.Models.Migrations
{
    internal sealed class TypedArraySeedContext : MigrationContext<EventSchedule>
    {
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            RemoveVariableModelAnnotations(modelBuilder);

            modelBuilder.Entity<EventSchedule>().HasData(
                    new EventSchedule { Id = 1, StartDate = new DateOnly(2022, 12, 13), StartTime = new TimeOnly(9, 9) },
                    new EventSchedule { Id = 2, StartDate = new DateOnly(2022, 12, 24), StartTime = new TimeOnly(10, 10) },
                    new EventSchedule { Id = 3, StartDate = new DateOnly(1758, 12, 24), StartTime = new TimeOnly(11, 11) });
        }

        public override string GetExpectedMigrationCode(string migrationName, string rootNamespace)
        {
            return $@"using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MyApp.Data.Migrations
{{
    public partial class MyMigration : Migration
    {{
        protected override void Up(MigrationBuilder migrationBuilder)
        {{
            migrationBuilder.CreateTable(
                name: ""TestModels"",
                columns: table => new
                {{
                    Id = table.Column<int>(type: ""int"", nullable: false),
                    StartDate = table.Column<{typeof(DateOnly).Name}>(type: ""date"", nullable: false),
                    StartTime = table.Column<{typeof(TimeOnly).Name}>(type: ""time"", nullable: false)
                }},
                constraints: table =>
                {{
                    table.PrimaryKey(""PK_TestModels"", x => x.Id);
                }});

            migrationBuilder.InsertData(
                table: ""TestModels"",
                columns: new[] {{ ""Id"", ""StartDate"", ""StartTime"" }},
                values: new object[] {{ 1, new DateOnly(2022, 12, 13), new TimeOnly(9, 9, 0) }});

            migrationBuilder.InsertData(
                table: ""TestModels"",
                columns: new[] {{ ""Id"", ""StartDate"", ""StartTime"" }},
                values: new object[] {{ 2, new DateOnly(2022, 12, 24), new TimeOnly(10, 10, 0) }});

            migrationBuilder.InsertData(
                table: ""TestModels"",
                columns: new[] {{ ""Id"", ""StartDate"", ""StartTime"" }},
                values: new object[] {{ 3, new DateOnly(1758, 12, 24), new TimeOnly(11, 11, 0) }});
        }}

        protected override void Down(MigrationBuilder migrationBuilder)
        {{
            migrationBuilder.DropTable(
                name: ""TestModels"");
        }}
    }}
}}
";
        }

        public override string GetExpectedSnapshotCode(string rootNamespace)
        {
            return $@"// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.SqlServer.Test.Models.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyApp.Data.Migrations
{{
    [DbContext(typeof(TypedArraySeedContext))]
    partial class TypedArraySeedContextModelSnapshot : ModelSnapshot
    {{
        protected override void BuildModel(ModelBuilder modelBuilder)
        {{
#pragma warning disable 612, 618

            modelBuilder.Entity(""Microsoft.EntityFrameworkCore.SqlServer.Test.Models.EventSchedule"", b =>
                {{
                    b.Property<int>(""Id"")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(""int"");

                    b.Property<DateOnly>(""StartDate"")
                        .HasColumnType(""date"");

                    b.Property<TimeOnly>(""StartTime"")
                        .HasColumnType(""time"");

                    b.HasKey(""Id"");

                    b.ToTable(""TestModels"");

                    b.HasData(
                        new
                        {{
                            Id = 1,
                            StartDate = new DateOnly(2022, 12, 13),
                            StartTime = new TimeOnly(9, 9, 0)
                        }},
                        new
                        {{
                            Id = 2,
                            StartDate = new DateOnly(2022, 12, 24),
                            StartTime = new TimeOnly(10, 10, 0)
                        }},
                        new
                        {{
                            Id = 3,
                            StartDate = new DateOnly(1758, 12, 24),
                            StartTime = new TimeOnly(11, 11, 0)
                        }});
                }});
#pragma warning restore 612, 618
        }}
    }}
}}
";
        }
    }
}
